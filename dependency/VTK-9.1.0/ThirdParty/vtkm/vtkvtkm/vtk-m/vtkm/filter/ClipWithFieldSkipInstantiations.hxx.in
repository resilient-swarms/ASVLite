//============================================================================
//  Copyright (c) Kitware, Inc.
//  All rights reserved.
//  See LICENSE.txt for details.
//
//  This software is distributed WITHOUT ANY WARRANTY; without even
//  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
//  PURPOSE.  See the above copyright notice for more information.
//============================================================================
//$# This file uses the pyexpander macro processing utility to build the
//$# FunctionInterface facilities that use a variable number of arguments.
//$# Information, documentation, and downloads for pyexpander can be found at:
//$#
//$#     http://pyexpander.sourceforge.net/
//$#
//$# To build the source code, execute the following (after installing
//$# pyexpander, of course):
//$#
//$#     expander.py ClipWithFieldSkipInstantiations.hxx.in > ClipWithFieldSkipInstantiations.hxx
//$#
//$# Ignore the following comment. It is meant for the generated file.
// **** DO NOT EDIT THIS FILE!!! ****
// This file is automatically generated by ClipWithFieldSkipInstantiations.hxx.in
// clang-format off

#ifndef vtk_m_filter_ClipWithFieldSkipInstantiations_hxx
#define vtk_m_filter_ClipWithFieldSkipInstantiations_hxx

#include <vtkm/filter/ClipWithField.h>
#include <vtkm/filter/ClipWithField.hxx>

#include <vtkm/cont/ArrayHandlePermutation.h>
#include <vtkm/cont/CellSetPermutation.h>
#include <vtkm/cont/CoordinateSystem.h>
#include <vtkm/cont/DynamicCellSet.h>
#include <vtkm/cont/ErrorFilterExecution.h>

namespace vtkm
{
namespace filter
{

$py(
# These values are taken from vtkm/TypeList.h
translationUnits = {
  "vtkm_filter_ClipWithFieldExecuteScalar_cxx" :
  [
    "vtkm::Float32", "vtkm::Float64"
  ],

  "vtkm_filter_ClipWithFieldExecuteSignedInteger_cxx":
  [
    "vtkm::Int8", "vtkm::Int16", "vtkm::Int32", "vtkm::Int64"
  ],

  "vtkm_filter_ClipWithFieldExecuteUnsignedInteger_cxx":
  [
    "vtkm::UInt8", "vtkm::UInt16", "vtkm::UInt32", "vtkm::UInt64"
  ]
}
)\
\
$for((TU, types) in translationUnits.items())\
#ifndef $(TU)

$for(TYPE in types)\
extern template VTKM_FILTER_EXTRA_EXPORT vtkm::cont::DataSet ClipWithField::DoExecute(
  const vtkm::cont::DataSet&,
  const vtkm::cont::ArrayHandle<$(TYPE)>&,
  const vtkm::filter::FieldMetadata&,
  vtkm::filter::PolicyBase<vtkm::filter::PolicyDefault>);

#ifndef VTKM_NO_DEPRECATED_VIRTUAL
VTKM_DEPRECATED_SUPPRESS_BEGIN
extern template VTKM_FILTER_EXTRA_EXPORT vtkm::cont::DataSet ClipWithField::DoExecute(
  const vtkm::cont::DataSet&,
  const vtkm::cont::ArrayHandle<$(TYPE), vtkm::cont::StorageTagVirtual>&,
  const vtkm::filter::FieldMetadata&,
  vtkm::filter::PolicyBase<vtkm::filter::PolicyDefault>);
VTKM_DEPRECATED_SUPPRESS_END
#endif

$endfor\
#endif // $(TU)

$endfor\

}
}

#endif
